var nejsExtension=(()=>{var d=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var b=Object.prototype.hasOwnProperty;var y=(s,t)=>{for(var e in t)d(s,e,{get:t[e],enumerable:!0})},w=(s,t,e,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of m(t))!b.call(s,r)&&r!==e&&d(s,r,{get:()=>t[r],enumerable:!(i=g(t,r))||i.enumerable});return s};var x=s=>w(d({},"__esModule",{value:!0}),s);var E={};y(E,{Errors:()=>v,Extension:()=>l,Patch:()=>h,PatchToggle:()=>c});var S=s=>/(\w+)]/.exec(Object.prototype.toString.call(s))[1],n=class extends Error{constructor(t,e){super(`${S(t)} disallows tampering with ${e}.`),Object.assign(this,{owner:t,key:e})}get[Symbol.toStringTag](){return this.constructor.name}};var R=s=>/(\w+)]/.exec(Object.prototype.toString.call(s))[1],a=class extends Error{constructor(t,e){super(`${R(t)} does not have a property named '${e}'.`),Object.assign(this,{owner:t,key:e})}get[Symbol.toStringTag](){return this.constructor.name}};var c=class{constructor(t,e=!1){this.started=!1,this.preventRevert=e,this.patch=t,this.patchName=t.owner?.name??t.owner?.constructor?.name??/(\w+)]/.exec(Object.prototype.toString.call(t.owner))[1],this.state={needsApplication:!1,needsReversion:!1}}start(){return this.started||(this.state.needsApplication=!this.patch.applied,this.state.needsReversion=this.patch.applied,this.started=!0,this.state.needsApplication&&this.patch.apply()),this}stop(){return this.started&&((this.preventRevert||this.patch.applied)&&this.patch.revert(),this.state.needsApplication=!1,this.state.needsReversion=!1,this.started=!1),this}get[Symbol.toStringTag](){return`${this.constructor.name}:${this.patchName}`}[Symbol.for("nodejs.util.inspect.custom")](t,e,i){let r=this[Symbol.toStringTag],o=`(started: ${this.started} needed: ${this.state.needsApplication})`;return i(`${r} ${o}`,{...e,depth:t})}};var h=class s{constructor(t,e,i={}){Object.assign(this,{owner:t,options:i,applied:!1}),this.patchConflicts={},this.patchEntries={},this.patchesOwner=e,Reflect.ownKeys(e).forEach(r=>{this.patchEntries[r]=new s.#t(r,this.patchesOwner),Reflect.has(this.owner,r)&&(this.patchConflicts[r]=new s.#t(r,this.owner))}),s.patches.has(t)||s.patches.set(t,[]),s.patches.get(t).push(this)}get patches(){return Reflect.ownKeys(this.patchEntries).map(t=>[t,this.patchEntries[t]])}get conflicts(){return Reflect.ownKeys(this.patchConflicts).map(t=>[t,this.patchConflicts[t]])}apply(){this.applied||(this.patches.forEach(([,t])=>{Object.defineProperty(this.owner,t.key,t.descriptor)}),this.applied=!0)}createToggle(t=!1){return new c(this,t)}revert(){this.applied&&(this.patches.forEach(([,t])=>{delete this.owner[t.key]}),this.conflicts.forEach(([,t])=>{Object.defineProperty(this.owner,t.key,t.descriptor)}),this.applied=!1)}release(){let t=s.patches.get(this.owner);t.splice(t.find(e=>e===this),1)}owner=null;options=null;static patches=new Map;static enableFor(t){if(s.patches.has(t))for(let e of s.patches.get(t))e.apply()}static disableFor(t){if(s.patches.has(t))for(let e of s.patches.get(t))e.revert()}static#t=class{constructor(t,e=globalThis){Object.assign(this,{key:t,descriptor:Object.getOwnPropertyDescriptor(e,t),owner:e})}get computed(){return this.isAccessor?this.descriptor.get.bind(this.owner).call():this.descriptor.value}get isData(){return Reflect.has(this.descriptor,"value")}get isAccessor(){return Reflect.has(this.descriptor,"get")}get isReadOnly(){return Reflect.has(this.descriptor,"configurable")&&!this.descriptor.configurable||Reflect.has(this.descriptor,"writable")&&!this.descriptor.writable}get[Symbol.toStringTag](){return this.constructor.name}[Symbol.for("nodejs.util.inspect.custom")](t,e,i){return`PatchEntry<${this.key}, ${this.isData?"Data":"Accessor"}${this.isReadOnly?" [ReadOnly]":""}>`}}};var l=class s extends h{constructor(t,e,i=globalThis,r={}){let{key:o,extension:f,valid:u}=s.determineInput(t);if(f=e||f,!u)throw new a(i,o);let p=Object.getOwnPropertyDescriptor(i,o);if(p&&(Reflect.has(p,"writable")&&!p.writable||Reflect.has(p,"configurable")&&!p.configurable))throw new n(i,o);super(i,{[o]:f},r),this.key=o}static determineInput(t){let e={key:null,extension:null,valid:!1};return t instanceof Function?e={key:t.name,extension:t,valid:!0}:(typeof t=="string"||t instanceof String)&&(e={key:t,extension:null,valid:!0}),e}[Symbol.for("nodejs.util.inspect.custom")](t,e,i){return`Extension<${this.key}>`}get[Symbol.toStringTag](){return this.constructor.name}};var v={get CannotBeExtended(){return n},get MissingOwnerValue(){return a}};return x(E);})();
//# sourceMappingURL=extension.bundle.1.2.0.js.map
